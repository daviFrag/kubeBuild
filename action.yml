name: 'Building kubernetes + helm'
description: 'GitHub Action for interacting with kubectl (k8s)'
author: 'Davide Frageri <davide.frag@gmail.com>'
branding:
  icon: 'terminal'
  color: 'blue'
inputs:
  TYPE:
    description: 'Deploy type'
  LINK:
    description: 'Link to connect the main process'
  KUBE_CONFIG:
    description: 'Kubernetes configuration'
  KUBE_HOST:
    description: 'Kubernetes cluster host (IP only, without protocol)'
  KUBE_USERNAME:
    description: 'Kubernetes cluster username'
  KUBE_PASSWORD:
    description: 'Kubernetes cluster password'
  KUBE_CERTIFICATE:
    description: 'Cluster CA certificate'
  KUBE_NAMESPACE:
    description: 'Kubernetes namespace'
  IMAGE_LINK:
    description: 'Image github docker registry'
  DOCKER_PASSWORD:
    description: 'Docker password'
  DOCKER_REGISTRY:
    description: 'Docker registry'
  DOCKER_USERNAME:
    description: 'Docker username'
  POSTGRES_USER:
    description: 'Postgres username'
  POSTGRES_PASSWORD:
    description: 'Postgres password'
  POSTGRES_DB:
    description: 'Postgres db'
  POSTGRES_VERSION:
    description: 'Postgres version'
  RABBITMQ_VHOST:
    description: 'Rabbit vhost'
  RABBITMQ_USER: 
    description: 'Rabbit user'
  RABBITMQ_PSW: 
    description: 'Rabbit psw'
    
runs:
  using: 'composite'
  steps:
    - run: |
      chmod +x /entrypoint.sh && \
      apk add --no-cache --update openssl curl ca-certificates && \
      curl -L https://storage.googleapis.com/kubernetes-release/release/v$KUBE_VERSION/bin/linux/amd64/kubectl -o /usr/local/bin/kubectl && \
      chmod +x /usr/local/bin/kubectl && \
      rm -rf /var/cache/apk/* && \
      curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
    - run: kubectl cluster-info
      shell: bash
    - run: ${{ github.action_path }}/entrypoint.sh
      shell: bash
